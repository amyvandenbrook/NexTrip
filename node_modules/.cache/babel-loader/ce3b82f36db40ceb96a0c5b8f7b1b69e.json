{"ast":null,"code":"var _jsxFileName = \"/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction Stops(route, direction) {\n  var stops = [];\n  var error = null;\n\n  if (route !== '' && direction !== '') {\n    fetch('http://svc.metrotransit.org/NexTrip/Stops/' + route + '/' + direction + '?format=json').then(res => res.json()).then(result => {\n      console.log(\"In Stops\");\n      console.log(result);\n      this.setState({\n        stops: result.data\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Stops: \"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, stops.map(stops => React.createElement(\"li\", {\n      key: stops.Value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, stops.Text, \"    \", stops.Value))));\n  } else {\n    return null;\n  }\n}\n\nconst Directions = ({\n  direction1Text = \"\",\n  direction1Value = \"\",\n  direction2Text = \"\",\n  direction2Value = \"\"\n}) => {\n  if (direction1Text === \"\" && direction1Value === \"\" && direction2Text === \"\" && direction2Value === \"\") {\n    return null;\n  } else {\n    return React.createElement(\"select\", {\n      id: \"Directions\",\n      name: \"Direction\",\n      onChange: \"handleDirectionValue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: direction1Value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, direction1Text), React.createElement(\"option\", {\n      value: direction2Value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, direction2Text));\n  }\n};\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.setState({\n        loading: true\n      });\n      fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json').then(res => res.json()).then(result => {\n        this.setState({\n          loading: false,\n          data: result\n        });\n      }, error => {\n        this.setState({\n          loading: false,\n          error\n        });\n      });\n    };\n\n    this.state = {\n      error: null,\n      loading: false,\n      data: [],\n      directionData: [],\n      value: '',\n      route: '',\n      direction: '',\n      direction1Text: '',\n      direction1Value: '',\n      direction2Text: '',\n      direction2Value: ''\n    };\n    this.handleDirection = this.handleDirection.bind(this);\n  }\n\n  handleDirectionValue(event) {\n    console.log(\"Updating Direction value to: \" + event.target.value);\n    this.setState({\n      directionData: event.target.value\n    });\n  }\n\n  handleDirection(event) {\n    console.log('Received a change');\n    this.setState({\n      route: event.target.value\n    });\n    console.log(event.target.value); // console.log('Get data for: https://svc.metrotransit.org/NexTrip/Directions/'\n    // + )\n\n    fetch('https://svc.metrotransit.org/NexTrip/Directions/' + event.target.value + '?format=json').then(res => res.json()).then(result => {\n      console.log(\"Changing states with new results\");\n      console.log(result);\n      this.setState({\n        loading: false,\n        directionData: result.data,\n        direction: result[0].Value,\n        direction1Text: result[0].Text,\n        direction1Value: result[0].Value,\n        direction2Text: result[1].Text,\n        direction2Value: result[1].Value\n      });\n    }, error => {\n      this.setState({\n        loading: false,\n        error\n      });\n    });\n    console.log(this.state);\n    console.log(this.state.directionData);\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      data\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        id: \"Route\",\n        name: \"Route\",\n        onChange: this.handleDirection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, data.map(data => React.createElement(\"option\", {\n        key: data.Route,\n        value: data.Route,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, data.Description))), React.createElement(Directions, {\n        direction1Text: this.state.direction1Text,\n        direction1Value: this.state.direction1Value,\n        direction2Text: this.state.direction2Text,\n        direction2Value: this.state.direction1Value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(Stops, {\n        route: this.state.route,\n        direction: this.state.direction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Next Trip Application\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Developed by Amy VandenBrook\"), React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js"],"names":["React","Component","Stops","route","direction","stops","error","fetch","then","res","json","result","console","log","setState","data","map","Value","Text","Directions","direction1Text","direction1Value","direction2Text","direction2Value","Routes","constructor","props","componentDidMount","loading","state","directionData","value","handleDirection","bind","handleDirectionValue","event","target","render","message","Route","Description","App"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction Stops(route, direction) {\n    var stops = [];\n    var error = null;\n\n    if (route !== '' && direction !== '') {\n        fetch('http://svc.metrotransit.org/NexTrip/Stops/' + route + '/' + direction + '?format=json')\n          .then(res => res.json())\n          .then((result) => {\n              console.log(\"In Stops\")\n              console.log(result)\n              this.setState({\n                  stops: result.data\n              });\n          }, (error) => {\n              this.setState({error});\n          })\n        \n          return (\n            <div>\n              <h2>Stops: </h2>\n              <ul>\n                {stops.map(stops => (\n                  <li key={stops.Value} >{stops.Text}    {stops.Value}</li>\n                ))}\n                </ul>\n            </div>\n          )\n\n    } else {\n        return null;\n    }\n}\n\nconst Directions = ({\n    direction1Text = \"\",\n    direction1Value = \"\",\n    direction2Text = \"\",\n    direction2Value = \"\"\n}) => {\n    if (direction1Text === \"\" && direction1Value === \"\" && direction2Text === \"\" && direction2Value === \"\") {\n        return (null)\n    } else {\n        return (\n            <select id=\"Directions\" name=\"Direction\" onChange=\"handleDirectionValue\">\n                <option value={direction1Value}>{direction1Text}</option>\n                <option value={direction2Value}>{direction2Text}</option>\n            </select>\n        )\n    }\n}\n\nclass Routes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            loading: false,\n            data: [],\n            directionData: [],\n            value: '',\n            route: '',\n            direction: '',\n            direction1Text: '',\n            direction1Value: '',\n            direction2Text: '',\n            direction2Value: ''\n        }\n\n        this.handleDirection = this\n            .handleDirection\n            .bind(this);\n    }\n\n    componentDidMount = () => {\n        this.setState({loading: true})\n        fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json')\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({loading: false, data: result});\n            }, (error) => {\n                this.setState({loading: false, error});\n            })\n    }\n\n    handleDirectionValue(event) {\n      console.log(\"Updating Direction value to: \" + event.target.value);\n      this.setState({directionData: event.target.value});\n    }\n\n    handleDirection(event) {\n        console.log('Received a change')\n        this.setState({route: event.target.value})\n        console.log(event.target.value)\n        // console.log('Get data for: https://svc.metrotransit.org/NexTrip/Directions/'\n        // + )\n        fetch('https://svc.metrotransit.org/NexTrip/Directions/' + event.target.value + '?format=json')\n            .then(res => res.json())\n            .then((result) => {\n                console.log(\"Changing states with new results\")\n                console.log(result)\n                this.setState({\n                    loading: false,\n                    directionData: result.data,\n                    direction: result[0].Value,\n                    direction1Text: result[0].Text,\n                    direction1Value: result[0].Value,\n                    direction2Text: result[1].Text,\n                    direction2Value: result[1].Value\n                });\n            }, (error) => {\n                this.setState({loading: false, error});\n            })\n        console.log(this.state)\n        console.log(this.state.directionData)\n    }\n\n    render() {\n        const {error, loading, data} = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else {\n            return (\n                <div>\n                    <select id=\"Route\" name=\"Route\" onChange={this.handleDirection}>\n                        {data.map(data => (\n                            <option key={data.Route} value={data.Route}>{data.Description}</option>\n                        ))}\n                    </select>\n                    <Directions\n                        direction1Text={this.state.direction1Text}\n                        direction1Value={this.state.direction1Value}\n                        direction2Text={this.state.direction2Text}\n                        direction2Value={this.state.direction1Value}/>\n                    <Stops route={this.state.route} direction={this.state.direction} />\n                </div>\n            )\n        }\n    }\n}\n\nfunction App() {\n    return (\n        <div>\n            <h1>Next Trip Application</h1>\n\n            <h2>Developed by Amy VandenBrook</h2>\n            <Routes/>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}