{"ast":null,"code":"var _jsxFileName = \"/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst Directions = ({\n  direction1Text = \"\",\n  direction1Value = \"\",\n  direction2Text = \"\",\n  direction2Value = \"\"\n}) => {\n  return React.createElement(\"select\", {\n    id: \"Directions\",\n    name: \"Direction\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: direction1Value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, direction1Text), React.createElement(\"option\", {\n    value: direction2Value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, direction2Text));\n};\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.setState({\n        loading: true\n      });\n      fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json').then(res => res.json()).then(result => {\n        this.setState({\n          loading: false,\n          data: result\n        });\n      }, error => {\n        this.setState({\n          loading: false,\n          error\n        });\n      });\n    };\n\n    this.state = {\n      error: null,\n      loading: false,\n      data: [],\n      directionData: [],\n      value: '',\n      route: '',\n      direction: '',\n      direction1Text: '',\n      direction1Value: '',\n      direction2Text: '',\n      direction2Value: ''\n    };\n    this.handleDirection = this.handleDirection.bind(this);\n  }\n\n  handleDirection(event) {\n    console.log('Received a change');\n    this.setState({\n      route: event.target.value\n    });\n    console.log(event.target.value); // console.log('Get data for: https://svc.metrotransit.org/NexTrip/Directions/' +\n    // )\n\n    fetch('https://svc.metrotransit.org/NexTrip/Directions/' + event.target.value + '?format=json').then(res => res.json()).then(result => {\n      console.log(result);\n      this.setState({\n        loading: false,\n        directionData: result.data\n      });\n    }, error => {\n      this.setState({\n        loading: false,\n        error\n      });\n    });\n    console.log(this.state);\n    console.log(this.state.directionData);\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      data\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        id: \"Route\",\n        name: \"Route\",\n        onChange: this.handleDirection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, data.map(data => React.createElement(\"option\", {\n        key: data.Route,\n        value: data.Route,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, data.Description))), React.createElement(Directions, {\n        direction1Text: this.state.direction1Text,\n        direction1Value: this.state.direction1Value,\n        direction2Text: this.state.direction2Text,\n        direction2Value: this.state.direction1Value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Next Trip Application\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Developed by Amy VandenBrook\"), React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js"],"names":["React","Component","Directions","direction1Text","direction1Value","direction2Text","direction2Value","Routes","constructor","props","componentDidMount","setState","loading","fetch","then","res","json","result","data","error","state","directionData","value","route","direction","handleDirection","bind","event","console","log","target","render","message","map","Route","Description","App"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst Directions = ({direction1Text=\"\", direction1Value=\"\", direction2Text=\"\", direction2Value=\"\"}) => {\n    return (\n        <select id=\"Directions\" name=\"Direction\">\n          <option value={direction1Value}>{direction1Text}</option>\n          <option value={direction2Value}>{direction2Text}</option>\n        </select>\n    )\n}\n\nclass Routes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            loading: false,\n            data: [],\n            directionData: [],\n            value: '',\n            route: '',\n            direction: '',\n            direction1Text: '',\n            direction1Value: '',\n            direction2Text: '',\n            direction2Value: '',\n        }\n\n        this.handleDirection = this\n            .handleDirection\n            .bind(this);\n    }\n\n    componentDidMount = () => {\n        this.setState({loading: true})\n        fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json')\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({loading: false, data: result});\n            }, (error) => {\n                this.setState({loading: false, error});\n            })\n    }\n\n    handleDirection(event) {\n        console.log('Received a change')\n        this.setState({route: event.target.value})\n        console.log(event.target.value)\n        // console.log('Get data for: https://svc.metrotransit.org/NexTrip/Directions/' +\n        // )\n        fetch('https://svc.metrotransit.org/NexTrip/Directions/' + event.target.value + '?format=json')\n            .then(res => res.json())\n            .then((result) => {\n                console.log(result)\n                this.setState({loading: false, directionData: result.data});\n            }, (error) => {\n                this.setState({loading: false, error});\n            })\n        console.log(this.state)\n        console.log(this.state.directionData)\n    }\n\n    render() {\n        const {error, loading, data} = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else {\n            return (\n                <div>\n                    <select id=\"Route\" name=\"Route\" onChange={this.handleDirection}>\n                        {data.map(data => (\n                            <option key={data.Route} value={data.Route}>{data.Description}</option>\n                        ))}\n                    </select>\n                    <Directions  direction1Text={this.state.direction1Text} direction1Value={this.state.direction1Value} direction2Text={this.state.direction2Text} direction2Value={this.state.direction1Value}/>\n                </div>\n            )\n        }\n    }\n}\n\nfunction App() {\n    return (\n        <div>\n            <h1>Next Trip Application</h1>\n\n            <h2>Developed by Amy VandenBrook</h2>\n            <Routes/>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}