{"ast":null,"code":"var _jsxFileName = \"/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst Stops = state => {\n  return state.stopData.map(stop => {\n    return React.createElement(\"li\", {\n      key: stop.Value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, stop.Text);\n  });\n};\n\nconst Directions = state => {\n  if (!state.directionLoaded) {\n    return null;\n  } else {\n    return React.createElement(\"select\", {\n      id: \"Directions\",\n      name: \"Direction\",\n      onChange: changeDirection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: state.directionData[0].Value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, state.directionData[0].Text), React.createElement(\"option\", {\n      value: state.directionData[1].Value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, state.directionData[1].Text));\n  }\n};\n\nconst Routes = state => {\n  if (!state.routeLoaded) {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Route is loading...\");\n  } else {\n    return React.createElement(\"select\", {\n      id: \"Route\",\n      name: \"Route\",\n      onChange: this.handleDirection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, state.routeData.map(data => React.createElement(\"option\", {\n      key: data.Route,\n      value: data.Route,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, data.Description)), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, state.routeData[0].description));\n  }\n}; // class Routes extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             error: null,\n//             loading: false,\n//             data: [],\n//             directionData: [],\n//             value: '',\n//             route: '',\n//             direction: '',\n//             direction1Text: '',\n//             direction1Value: '',\n//             direction2Text: '',\n//             direction2Value: '',\n//             stopData: []\n//         }\n//         this.handleDirection = this\n//             .handleDirection\n//             .bind(this);\n//     }\n//     componentDidMount = () => {\n//         state.routeLoading = true\n//         fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json')\n//             .then(res => res.json())\n//             .then((result) => {\n//                 state.routeLoading = false;\n//                 state.routeLoaded = true;\n//                 state.routeData = result;\n//                 console.log(\"Received data\")\n//                 console.log(state.routeData)\n//             }, (error) => {\n//                 state.error = error;\n//             })\n//     }\n//     render() {\n//         if (state.error) {\n//             return <div>Error: {state.error.message}</div>;\n//         } else {\n//             return (\n//                 <div>\n//                     <div>{state.routeDataLoaded}</div>\n//                     <select id=\"Route\" name=\"Route\" onChange={this.handleDirection}>\n//                         {state.routeData.map(data => (\n//                             <option key={data.Route} value={data.Route}>{data.Description}</option>\n//                         ))}\n//                         <option>{state.routeData[0].description}</option>\n//                     </select>\n//                     <Directions />\n//                     <div className=\"stops-container\">\n//                         <ul>\n//                             <Stops />\n//                         </ul>\n//                     </div>\n//                 </div>\n//             )\n//         }\n//     }\n// }\n\n\nclass Master extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      state.routeLoading = true;\n      fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json').then(res => res.json()).then(result => {\n        this.setState({\n          routeLoading: false,\n          routeLoaded: true,\n          routeData: result\n        });\n      }, error => {\n        this.setState({\n          routeLoaded: false,\n          routeLoading: false,\n          error\n        });\n      });\n    };\n\n    this.getStops = () => {\n      this.setState({\n        stopLoading: true\n      });\n      fetch('https://svc.metrotransit.org/NexTrip/Stops/' + state.route + '/' + state.direction + '?format=json').then(res => res.json()).then(result => {\n        this.setState({\n          stopData: result,\n          stopLoaded: true\n        });\n      }, error => {\n        this.setState({\n          stopLoaded: false,\n          stopLoading: false,\n          error\n        });\n      });\n    };\n\n    this.changeDirection = event => {\n      this.setState({\n        direction: event.target.value\n      });\n      getStops();\n    };\n\n    this.handleDirection = event => {\n      // Update state values\n      this.setState({\n        route: event.target.value,\n        directionLoading: true,\n        directionLoaded: false\n      });\n      console.log(\"Updated state.route to\");\n      console.log(state.route);\n      fetch('https://svc.metrotransit.org/NexTrip/Directions/' + state.route + '?format=json').then(res => res.json()).then(result => {\n        this.setState({\n          directionLoaded: true,\n          directionLoading: false,\n          directionData: result,\n          direction: result[0].Text\n        });\n        getStops();\n      }, error => {\n        this.setState({\n          directionLoaded: false,\n          directionLoading: false,\n          error\n        });\n      });\n    };\n\n    this.state = {\n      routeData: [],\n      route: '',\n      routeLoaded: false,\n      routeLoading: false,\n      directionData: [],\n      direction: '',\n      directionLoaded: false,\n      directionLoading: false,\n      stopData: [],\n      stopLoaded: false,\n      stopLoading: false,\n      error: null\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Routes, {\n      state: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(Directions, {\n      state: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"stops-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Stops, {\n      state: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"Next Trip Application\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Developed by Amy VandenBrook\"), React.createElement(Master, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js"],"names":["React","Component","Stops","state","stopData","map","stop","Value","Text","Directions","directionLoaded","changeDirection","directionData","Routes","routeLoaded","handleDirection","routeData","data","Route","Description","description","Master","constructor","props","componentDidMount","routeLoading","fetch","then","res","json","result","setState","error","getStops","stopLoading","route","direction","stopLoaded","event","target","value","directionLoading","console","log","render","App"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nconst Stops = ( state ) => {\n    return state.stopData.map(stop => {\n        return (\n            <li key={stop.Value}>{stop.Text}</li>\n        )\n    })\n}\n\nconst Directions = ( state ) => {\n    if (!state.directionLoaded) {\n        return (null)\n    } else {\n        return (\n            <select id=\"Directions\" name=\"Direction\" onChange={changeDirection}>\n                <option value={state.directionData[0].Value}>{state.directionData[0].Text}</option>\n                <option value={state.directionData[1].Value}>{state.directionData[1].Text}</option>\n            </select>\n        )\n    }\n}\n\nconst Routes = (state) => {\n    if (!state.routeLoaded) {\n        return (<h1>Route is loading...</h1>)\n    } else {\n        return (\n            <select id=\"Route\" name=\"Route\" onChange={this.handleDirection}>\n                        {state.routeData.map(data => (\n                            <option key={data.Route} value={data.Route}>{data.Description}</option>\n                        ))}\n                        <option>{state.routeData[0].description}</option>\n                    </select>\n        )\n    }\n}\n\n// class Routes extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             error: null,\n//             loading: false,\n//             data: [],\n//             directionData: [],\n//             value: '',\n//             route: '',\n//             direction: '',\n//             direction1Text: '',\n//             direction1Value: '',\n//             direction2Text: '',\n//             direction2Value: '',\n//             stopData: []\n//         }\n\n//         this.handleDirection = this\n//             .handleDirection\n//             .bind(this);\n//     }\n\n//     componentDidMount = () => {\n//         state.routeLoading = true\n//         fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json')\n//             .then(res => res.json())\n//             .then((result) => {\n//                 state.routeLoading = false;\n//                 state.routeLoaded = true;\n//                 state.routeData = result;\n//                 console.log(\"Received data\")\n//                 console.log(state.routeData)\n//             }, (error) => {\n//                 state.error = error;\n//             })\n//     }\n\n//     render() {\n//         if (state.error) {\n//             return <div>Error: {state.error.message}</div>;\n//         } else {\n//             return (\n//                 <div>\n//                     <div>{state.routeDataLoaded}</div>\n//                     <select id=\"Route\" name=\"Route\" onChange={this.handleDirection}>\n//                         {state.routeData.map(data => (\n//                             <option key={data.Route} value={data.Route}>{data.Description}</option>\n//                         ))}\n//                         <option>{state.routeData[0].description}</option>\n//                     </select>\n//                     <Directions />\n//                     <div className=\"stops-container\">\n//                         <ul>\n//                             <Stops />\n//                         </ul>\n//                     </div>\n                    \n//                 </div>\n//             )\n//         }\n//     }\n// }\n\nclass Master extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            routeData: [],\n            route: '',\n            routeLoaded: false,\n            routeLoading: false,\n            directionData: [],\n            direction: '',\n            directionLoaded: false,\n            directionLoading: false,\n            stopData: [],\n            stopLoaded: false,\n            stopLoading: false,\n            error: null\n        }\n    }\n\n    componentDidMount = () => {\n        state.routeLoading = true\n\n        fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json')\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({\n                    routeLoading: false,\n                    routeLoaded: true,\n                    routeData: result\n                })\n            }, (error) => {\n                this.setState({\n                    routeLoaded: false, \n                    routeLoading: false, \n                    error\n                });\n            })\n    }\n\n    getStops = () => {\n        this.setState({ stopLoading: true })\n\n        fetch('https://svc.metrotransit.org/NexTrip/Stops/' + state.route + '/' + state.direction + '?format=json')\n          .then(res => res.json())\n          .then((result) => {\n              this.setState({\n                  stopData: result,\n                  stopLoaded: true\n              })\n          }, (error) => {\n            this.setState({\n                stopLoaded: false, \n                stopLoading: false, \n                error\n            });\n        })\n    }\n\n    changeDirection = ( event ) => {\n        this.setState({\n            direction: event.target.value\n        })\n        getStops();\n    }\n\n    handleDirection = (event) => {\n        // Update state values\n        this.setState({\n            route: event.target.value,\n            directionLoading: true,\n            directionLoaded: false\n        })\n\n        console.log(\"Updated state.route to\")\n        console.log(state.route)\n\n        fetch('https://svc.metrotransit.org/NexTrip/Directions/' + state.route + '?format=json')\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({\n                    directionLoaded: true,\n                    directionLoading: false,\n                    directionData: result,\n                    direction: result[0].Text\n                })\n                getStops();\n            }, (error) => {\n                this.setState({\n                    directionLoaded: false, \n                    directionLoading: false, \n                    error\n                });\n            })\n    }\n\n    render () {\n        return (\n            <React.Fragment>\n                <Routes state={this.state} />\n                <Directions state={this.state} />\n                <div className=\"stops-container\">\n                    <ul>\n                        <Stops state={this.state} />\n                    </ul>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nfunction App() {\n    return (\n        <div>\n            <h1>Next Trip Application</h1>\n\n            <h2>Developed by Amy VandenBrook</h2>\n            <Master />\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}