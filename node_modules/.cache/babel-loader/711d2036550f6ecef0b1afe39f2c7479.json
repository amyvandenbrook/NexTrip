{"ast":null,"code":"var _jsxFileName = \"/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport logo from \"./logo.svg\";\nimport { ChooseDirection } from './Direction';\nimport { ChooseRoute } from './Route';\nimport { ShowStops } from './Stops';\nimport './Mobile.css';\nimport './Tablet.css';\nimport './Desktop.css';\nimport './Luxury.css';\nimport './App.css';\n\nclass Master extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.setState({\n        routeLoading: true\n      });\n      fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json').then(res => res.json()).then(result => {\n        this.setState({\n          routeLoading: false,\n          routeLoaded: true,\n          routeData: result\n        });\n        console.log(\"Route is loaded, here is data: \");\n        console.log(this.state.routeData);\n      }, error => {\n        this.setState({\n          routeLoaded: false,\n          routeLoading: false,\n          error\n        });\n      });\n    };\n\n    this.getStops = () => {\n      console.log(\"In getStops\");\n      this.setState({\n        stopLoading: true\n      });\n      console.log(\"Fetching this route: \");\n      console.log('https://svc.metrotransit.org/NexTrip/Stops/' + this.state.route + '/' + this.state.direction + '?format=json');\n      fetch('https://svc.metrotransit.org/NexTrip/Stops/' + this.state.route + '/' + this.state.direction + '?format=json').then(res => res.json()).then(result => {\n        this.setState({\n          stopData: result,\n          stopLoaded: true\n        });\n      }, error => {\n        this.setState({\n          stopLoaded: false,\n          stopLoading: false,\n          error\n        });\n      });\n    };\n\n    this.changeDirection = event => {\n      console.log(\"in change direction\");\n      this.setState({\n        direction: event.target.value\n      }, this.getStops);\n    };\n\n    this.handleDirection = event => {\n      console.log(\"In handleDirection\"); // Update state values\n\n      this.setState({\n        route: event.target.value,\n        directionLoading: true,\n        directionLoaded: false\n      });\n      console.log(\"Updated state.route to\");\n      console.log(event.target.value);\n      console.log('In handle direction');\n      fetch('https://svc.metrotransit.org/NexTrip/Directions/' + event.target.value + '?format=json').then(res => res.json()).then(result => {\n        this.setState({\n          directionLoaded: true,\n          directionLoading: false,\n          directionData: result,\n          direction: result[0].Value\n        });\n        this.getStops();\n      }, error => {\n        this.setState({\n          directionLoaded: false,\n          directionLoading: false,\n          error\n        });\n      });\n    };\n\n    this.state = {\n      routeData: [],\n      route: '',\n      routeLoaded: false,\n      routeLoading: false,\n      directionData: [],\n      direction: '',\n      directionLoaded: false,\n      directionLoading: false,\n      stopData: [],\n      stopLoaded: false,\n      stopLoading: false,\n      error: null\n    };\n    this.getStops = this.getStops.bind(this);\n    this.changeDirection = this.changeDirection.bind(this);\n    this.handleDirection = this.handleDirection.bind(this);\n  }\n\n  render() {\n    return React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"route-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(ChooseRoute, {\n      state: this.state,\n      routeLoaded: this.state.routeLoaded,\n      routeData: this.state.routeData,\n      routeHandler: this.handleDirection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"directions-container\",\n      \"data-testid\": \"Direction-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(ChooseDirection, {\n      directionLoaded: this.state.directionLoaded,\n      directionData0: this.state.directionData[0],\n      directionData1: this.state.directionData[1],\n      directionHandler: this.changeDirection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"stops-container\",\n      \"data-testid\": \"Stops-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Stops\"), React.createElement(ShowStops, {\n      stopLoaded: this.state.stopLoaded,\n      stopData: this.state.stopData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))));\n  }\n\n} // ? <select id=\"Directions\" name=\"Direction\" onChange={this.changeDirection}>\n//         <option value={this.state.directionData[0].Value}>{this.state.directionData[0].Text}</option>\n//         <option value={this.state.directionData[1].Value}>{this.state.directionData[1].Text}</option>\n//     </select>\n\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"note\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"color-red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"This application is sourced by real-time data from \"), \" \", React.createElement(\"img\", {\n    src: \"https://www.metrotransit.org/img/MetroTransitLogo.svg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  })), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"NexTrip\"), React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"application\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(Master, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","ChooseDirection","ChooseRoute","ShowStops","Master","constructor","props","componentDidMount","setState","routeLoading","fetch","then","res","json","result","routeLoaded","routeData","console","log","state","error","getStops","stopLoading","route","direction","stopData","stopLoaded","changeDirection","event","target","value","handleDirection","directionLoading","directionLoaded","directionData","Value","bind","render","App"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport logo from './logo.svg';\nimport { ChooseDirection } from './Direction';\nimport { ChooseRoute } from './Route';\nimport { ShowStops } from './Stops';\nimport './Mobile.css';\nimport './Tablet.css';\nimport './Desktop.css';\nimport './Luxury.css';\nimport './App.css';\n\n\nclass Master extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            routeData: [],\n            route: '',\n            routeLoaded: false,\n            routeLoading: false,\n            directionData: [],\n            direction: '',\n            directionLoaded: false,\n            directionLoading: false,\n            stopData: [],\n            stopLoaded: false,\n            stopLoading: false,\n            error: null\n        }\n        this.getStops = this.getStops.bind(this);\n        this.changeDirection = this.changeDirection.bind(this);\n        this.handleDirection = this.handleDirection.bind(this);\n    }\n\n    componentDidMount = () => {\n        this.setState({ routeLoading: true })\n\n        fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json')\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({\n                    routeLoading: false,\n                    routeLoaded: true,\n                    routeData: result\n                })\n                console.log(\"Route is loaded, here is data: \")\n                console.log(this.state.routeData)\n            }, (error) => {\n                this.setState({\n                    routeLoaded: false, \n                    routeLoading: false, \n                    error\n                });\n            })\n    }\n\n    getStops = () => {\n        console.log(\"In getStops\");\n        this.setState({ stopLoading: true })\n\n        console.log(\"Fetching this route: \")\n        console.log('https://svc.metrotransit.org/NexTrip/Stops/' + this.state.route + '/' + this.state.direction + '?format=json')\n\n        fetch('https://svc.metrotransit.org/NexTrip/Stops/' + this.state.route + '/' + this.state.direction + '?format=json')\n          .then(res => res.json())\n          .then((result) => {\n              this.setState({\n                  stopData: result,\n                  stopLoaded: true\n              })\n          }, (error) => {\n            this.setState({\n                stopLoaded: false, \n                stopLoading: false, \n                error\n            });\n        })\n    }\n\n    changeDirection = ( event ) => {\n        console.log(\"in change direction\")\n        this.setState({\n            direction: event.target.value\n        }, this.getStops);\n    }\n\n    handleDirection = (event) => {\n        console.log(\"In handleDirection\")\n        // Update state values\n        this.setState({\n            route: event.target.value,\n            directionLoading: true,\n            directionLoaded: false\n        })\n\n        console.log(\"Updated state.route to\")\n        console.log(event.target.value)\n        console.log('In handle direction');\n\n        fetch('https://svc.metrotransit.org/NexTrip/Directions/' + event.target.value + '?format=json')\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({\n                    directionLoaded: true,\n                    directionLoading: false,\n                    directionData: result,\n                    direction: result[0].Value\n                })\n                this.getStops();\n            }, (error) => {\n                this.setState({\n                    directionLoaded: false, \n                    directionLoading: false, \n                    error\n                });\n            })\n    }\n\n    render () {\n        return (\n            <Switch>\n            <React.Fragment>\n            <div className='route-container'>\n                {/* {this.state.routeLoaded\n                    ? <React.Fragment>\n                            <p>Please select a route from the options below to see the directions and stops available for you!</p>\n                            <select id=\"Route\" data-testid=\"Select-Route\" name=\"Route\" onChange={this.handleDirection}>\n                                {this.state.routeData.map(data => (\n                                    <option key={data.Route} value={data.Route}>{data.Description}</option>\n                                ))}\n                            </select>\n                            <i className=\"fas fa-arrow-circle-down\"></i>\n                        </React.Fragment>\n                    : <div>Loading</div>\n                } */}\n                <ChooseRoute state={this.state} routeLoaded={this.state.routeLoaded} routeData={this.state.routeData} routeHandler={this.handleDirection}/>\n                \n                 <div className=\"directions-container\" data-testid=\"Direction-Container\">\n                    <ChooseDirection directionLoaded={this.state.directionLoaded} directionData0={this.state.directionData[0]} directionData1={this.state.directionData[1]} directionHandler={this.changeDirection} />\n                 {/*   {this.state.directionLoaded\n                        ? <React.Fragment>\n                                    <div className=\"description\">Choose a direction: </div>\n                                    <input type='radio' name='Direction' id={this.state.directionData[0].Value} value={this.state.directionData[0].Value} onClick={this.changeDirection} defaultChecked ></input><label htmlFor={this.state.directionData[0].Value}>{this.state.directionData[0].Text.toLowerCase()}</label>\n                                    <input type='radio' name='Direction' id={this.state.directionData[1].Value} value={this.state.directionData[1].Value} onClick={this.changeDirection}></input><label htmlFor={this.state.directionData[1].Value}>{this.state.directionData[1].Text.toLowerCase()}</label>\n                                </React.Fragment>\n                        : null\n                    }*/}\n                </div>\n                \n                </div>\n                <div className=\"stops-container\" data-testid=\"Stops-Container\">\n                    <h2>Stops</h2>\n                    <ShowStops stopLoaded={this.state.stopLoaded} stopData={this.state.stopData} />\n{/*                     \n                    {this.state.stopLoaded\n                        ? <ul>\n                            {this.state.stopData.map(stop => (\n                                <li key={stop.Value}>{stop.Text}</li>\n                            ))}\n                            </ul>\n                        : <div>Please choose a route above to see related stops.</div>\n                    } */}\n                    \n                </div>\n            </React.Fragment>\n            </Switch>\n        )\n    }\n}\n\n// ? <select id=\"Directions\" name=\"Direction\" onChange={this.changeDirection}>\n                        //         <option value={this.state.directionData[0].Value}>{this.state.directionData[0].Text}</option>\n                        //         <option value={this.state.directionData[1].Value}>{this.state.directionData[1].Text}</option>\n                        //     </select>\n\n\nfunction App() {\n    return (\n        <div className='content'>\n            <div className='note'><h4 className='color-red'>This application is sourced by real-time data from </h4> <img src='https://www.metrotransit.org/img/MetroTransitLogo.svg'></img></div>\n            <h1>NexTrip</h1>\n            <BrowserRouter>\n            <div className='application'>\n                <Master />\n            </div>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}