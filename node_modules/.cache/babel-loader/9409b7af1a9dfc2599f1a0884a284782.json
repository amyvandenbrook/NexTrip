{"ast":null,"code":"var _jsxFileName = \"/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nconst state = {\n  routeData: [],\n  route: '',\n  routeLoaded: false,\n  directionData: [],\n  direction: '',\n  directionLoaded: false,\n  stopData: [],\n  stopLoaded: false,\n  error: null\n};\n\nconst Stops = () => {\n  return state.stopData.map(stop => {\n    return React.createElement(\"li\", {\n      key: stop.Value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, stop.Text);\n  });\n};\n\nconst getStops = () => {\n  fetch('https://svc.metrotransit.org/NexTrip/Stops/' + state.route + '/' + state.direction + '?format=json').then(res => res.json()).then(result => {\n    state.stopData = result;\n    state.stopLoaded = true;\n  }, error => {\n    state.error = error;\n  });\n};\n\nconst changeDirection = event => {\n  state.direction = event.target.value;\n  getStops();\n}; // const Directions = ({data=[{Value: 1, Text: 'Northbound'},{Value: 2, Text: 'Southbound'}]}) => \n//     return (\n//         <form>\n//             <input type=\"radio\" name=\"direction\" key={1} value={data[0].Value}>{data[0].Text}</input>\n//             <input type=\"radio\" name=\"direction\" key={2} value={data[1].Value}>{data[1].Text}</input>\n//         </form>\n//     )\n//     // return data.map(direction => {\n//     //     return (\n//     //         <input id={direction.Value} name=\"direction\" key={direction.Value} value={direction.Value}>{direction.Text}</input>\n//     //         )\n//     // })\n// }\n//            <input type=\"radio\" id={direction.Value} name=\"direction\" key={direction.Value}>{direction.Text}</input>\n\n\nconst Directions = () => {\n  if (!state.directionLoaded) {\n    return null;\n  } else {\n    return React.createElement(\"select\", {\n      id: \"Directions\",\n      name: \"Direction\",\n      onChange: changeDirection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: state.directionData[0].Value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, state.directionData[0].Text), React.createElement(\"option\", {\n      value: state.directionData[1].Value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, state.directionData[1].Text));\n  }\n};\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      state.routeLoading = true;\n      fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json').then(res => res.json()).then(result => {\n        state.routeLoading = false;\n        state.routeLoaded = true;\n        state.routeData = result;\n      }, error => {\n        state.error = error;\n      });\n    };\n\n    this.state = {\n      error: null,\n      loading: false,\n      data: [],\n      directionData: [],\n      value: '',\n      route: '',\n      direction: '',\n      direction1Text: '',\n      direction1Value: '',\n      direction2Text: '',\n      direction2Value: '',\n      stopData: []\n    };\n    this.handleDirection = this.handleDirection.bind(this);\n  }\n\n  handleDirection(event) {\n    // Update state values\n    state.route = event.target.value;\n    state.directionLoading = true;\n    state.directionLoaded = false;\n    console.log(\"Updated state.route to\");\n    console.log(state.route);\n    fetch('https://svc.metrotransit.org/NexTrip/Directions/' + state.route + '?format=json').then(res => res.json()).then(result => {\n      state.directionLoaded = true;\n      state.directionLoading = false;\n      state.directionData = result;\n      state.direction = result[0].Text;\n      getStops();\n      console;\n    }, error => {\n      state.error = error;\n    });\n  }\n\n  render() {\n    if (state.error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Error: \", state.error.message);\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        id: \"Route\",\n        name: \"Route\",\n        onChange: this.handleDirection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, state.routeData.map(data => React.createElement(\"option\", {\n        key: data.Route,\n        value: data.Route,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, data.Description))), React.createElement(Directions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"stops-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Stops, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))));\n    }\n  }\n\n} //<Directions\n// direction1Text={this.state.direction1Text}\n// direction1Value={this.state.direction1Value}\n// direction2Text={this.state.direction2Text}\n// direction2Value={this.state.direction1Value}/>\n//<Stops route={this.state.route} direction={this.state.direction} />\n\n\nfunction App() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Next Trip Application\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Developed by Amy VandenBrook\"), React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js"],"names":["React","Component","state","routeData","route","routeLoaded","directionData","direction","directionLoaded","stopData","stopLoaded","error","Stops","map","stop","Value","Text","getStops","fetch","then","res","json","result","changeDirection","event","target","value","Directions","Routes","constructor","props","componentDidMount","routeLoading","loading","data","direction1Text","direction1Value","direction2Text","direction2Value","handleDirection","bind","directionLoading","console","log","render","message","Route","Description","App"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst state = {\n    routeData: [],\n    route: '',\n    routeLoaded: false,\n    directionData: [],\n    direction: '',\n    directionLoaded: false,\n    stopData: [],\n    stopLoaded: false,\n    error: null\n}\n\nconst Stops = () => {\n    return state.stopData.map(stop => {\n        return (\n            <li key={stop.Value}>{stop.Text}</li>\n        )\n    })\n}\n\nconst getStops = () => {\n        fetch('https://svc.metrotransit.org/NexTrip/Stops/' + state.route + '/' + state.direction + '?format=json')\n          .then(res => res.json())\n          .then((result) => {\n              state.stopData = result;\n              state.stopLoaded = true;\n          }, (error) => {\n              state.error = error;\n          })\n    }\n\nconst changeDirection = ( event ) => {\n    state.direction = event.target.value;\n    getStops();\n}\n// const Directions = ({data=[{Value: 1, Text: 'Northbound'},{Value: 2, Text: 'Southbound'}]}) => \n//     return (\n//         <form>\n//             <input type=\"radio\" name=\"direction\" key={1} value={data[0].Value}>{data[0].Text}</input>\n//             <input type=\"radio\" name=\"direction\" key={2} value={data[1].Value}>{data[1].Text}</input>\n//         </form>\n//     )\n//     // return data.map(direction => {\n//     //     return (\n//     //         <input id={direction.Value} name=\"direction\" key={direction.Value} value={direction.Value}>{direction.Text}</input>\n\n//     //         )\n\n//     // })\n// }\n\n//            <input type=\"radio\" id={direction.Value} name=\"direction\" key={direction.Value}>{direction.Text}</input>\n\n\n\nconst Directions = () => {\n    if (!state.directionLoaded) {\n        return (null)\n    } else {\n        return (\n            <select id=\"Directions\" name=\"Direction\" onChange={changeDirection}>\n                <option value={state.directionData[0].Value}>{state.directionData[0].Text}</option>\n                <option value={state.directionData[1].Value}>{state.directionData[1].Text}</option>\n            </select>\n        )\n    }\n}\n\nclass Routes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            loading: false,\n            data: [],\n            directionData: [],\n            value: '',\n            route: '',\n            direction: '',\n            direction1Text: '',\n            direction1Value: '',\n            direction2Text: '',\n            direction2Value: '',\n            stopData: []\n        }\n\n        this.handleDirection = this\n            .handleDirection\n            .bind(this);\n    }\n\n    componentDidMount = () => {\n        state.routeLoading = true\n        fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json')\n            .then(res => res.json())\n            .then((result) => {\n                state.routeLoading = false;\n                state.routeLoaded = true;\n                state.routeData = result;\n            }, (error) => {\n                state.error = error;\n            })\n    }\n\n    handleDirection(event) {\n        // Update state values\n        state.route = event.target.value;\n        state.directionLoading = true;\n        state.directionLoaded = false;\n\n        console.log(\"Updated state.route to\")\n        console.log(state.route)\n\n        fetch('https://svc.metrotransit.org/NexTrip/Directions/' + state.route + '?format=json')\n            .then(res => res.json())\n            .then((result) => {\n                state.directionLoaded = true;\n                state.directionLoading = false;\n                state.directionData = result;\n                state.direction = result[0].Text;\n                getStops();\n                console\n            }, (error) => {\n                state.error = error\n            })\n    }\n\n    render() {\n        if (state.error) {\n            return <div>Error: {state.error.message}</div>;\n        } else {\n            return (\n                <div>\n                    <select id=\"Route\" name=\"Route\" onChange={this.handleDirection}>\n                        {state.routeData.map(data => (\n                            <option key={data.Route} value={data.Route}>{data.Description}</option>\n                        ))}\n                    </select>\n                    <Directions />\n                    <div className=\"stops-container\">\n                        <ul>\n                            <Stops />\n                        </ul>\n                    </div>\n                    \n                </div>\n            )\n        }\n    }\n}\n//<Directions\n// direction1Text={this.state.direction1Text}\n// direction1Value={this.state.direction1Value}\n// direction2Text={this.state.direction2Text}\n// direction2Value={this.state.direction1Value}/>\n//<Stops route={this.state.route} direction={this.state.direction} />\nfunction App() {\n    return (\n        <div>\n            <h1>Next Trip Application</h1>\n\n            <h2>Developed by Amy VandenBrook</h2>\n            <Routes/>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}