{"ast":null,"code":"var _jsxFileName = \"/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, HashRouter } from 'react-router-dom';\nimport logo from \"./logo.svg\";\nimport { ChooseDirection } from './Direction';\nimport { ChooseRoute } from './Route';\nimport { ShowStops } from './Stops';\nimport './Mobile.css';\nimport './Tablet.css';\nimport './Desktop.css';\nimport './Luxury.css';\nimport './App.css';\n\nclass Master extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.setState({\n        routeLoading: true\n      });\n      fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json').then(res => res.json()).then(result => {\n        this.setState({\n          routeLoading: false,\n          routeLoaded: true,\n          routeData: result\n        });\n      }, error => {\n        this.setState({\n          routeLoaded: false,\n          routeLoading: false,\n          error\n        });\n      });\n    };\n\n    this.getStops = () => {\n      this.setState({\n        stopLoading: true\n      });\n      fetch('https://svc.metrotransit.org/NexTrip/Stops/' + this.state.route + '/' + this.state.direction + '?format=json').then(res => res.json()).then(result => {\n        this.setState({\n          stopData: result,\n          stopLoaded: true\n        });\n      }, error => {\n        this.setState({\n          stopLoaded: false,\n          stopLoading: false,\n          error\n        });\n      });\n    };\n\n    this.directionHandler = event => {\n      this.setState({\n        direction: event.target.value\n      }, this.getStops);\n    };\n\n    this.routeHandler = event => {\n      // Update state values\n      this.setState({\n        route: event.target.value,\n        directionLoading: true,\n        directionLoaded: false\n      });\n      fetch('https://svc.metrotransit.org/NexTrip/Directions/' + event.target.value + '?format=json').then(res => res.json()).then(result => {\n        this.setState({\n          directionLoaded: true,\n          directionLoading: false,\n          directionData: result,\n          direction: result[0].Value,\n          directionRoute: true\n        });\n\n        if (!window.location.href.toString().includes('#Directions')) {\n          window.history.pushState(window.location.href, '', window.location.href + '#Directions');\n        }\n\n        this.getStops();\n      }, error => {\n        this.setState({\n          directionLoaded: false,\n          directionLoading: false,\n          error\n        });\n      });\n    };\n\n    this.state = {\n      routeData: [],\n      route: '',\n      routeLoaded: false,\n      routeLoading: false,\n      directionData: [],\n      direction: '',\n      directionRoute: false,\n      directionLoaded: false,\n      directionLoading: false,\n      stopData: [],\n      stopLoaded: false,\n      stopLoading: false,\n      error: null\n    };\n    this.getStops = this.getStops.bind(this);\n    this.directionHandler = this.directionHandler.bind(this);\n    this.routeHandler = this.routeHandler.bind(this);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"route-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(ChooseRoute, {\n      state: this.state,\n      routeLoaded: this.state.routeLoaded,\n      routeData: this.state.routeData,\n      routeHandler: this.routeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"directions-container\",\n      \"data-testid\": \"Direction-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(ChooseDirection, {\n      directionLoaded: this.state.directionLoaded,\n      directionData0: this.state.directionData[0],\n      directionData1: this.state.directionData[1],\n      directionHandler: this.directionHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"stops-container\",\n      \"data-testid\": \"Stops-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Stops\"), React.createElement(ShowStops, {\n      stopLoaded: this.state.stopLoaded,\n      stopData: this.state.stopData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/stops\",\n      render: () => React.createElement(ShowStops, {\n        stopLoaded: this.state.stopLoaded,\n        stopData: this.state.stopData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction App() {\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"note\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"This application is sourced by real-time data from\"), React.createElement(\"img\", {\n    src: \"https://www.metrotransit.org/img/MetroTransitLogo.svg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"NexTrip\"), React.createElement(\"div\", {\n    className: \"application\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/NexTrip\",\n    component: Master,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","HashRouter","ChooseDirection","ChooseRoute","ShowStops","Master","constructor","props","componentDidMount","setState","routeLoading","fetch","then","res","json","result","routeLoaded","routeData","error","getStops","stopLoading","state","route","direction","stopData","stopLoaded","directionHandler","event","target","value","routeHandler","directionLoading","directionLoaded","directionData","Value","directionRoute","window","location","href","toString","includes","history","pushState","bind","render","App"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch, HashRouter} from 'react-router-dom';\nimport logo from './logo.svg';\nimport {ChooseDirection} from './Direction';\nimport {ChooseRoute} from './Route';\nimport {ShowStops} from './Stops';\nimport './Mobile.css';\nimport './Tablet.css';\nimport './Desktop.css';\nimport './Luxury.css';\nimport './App.css';\n\nclass Master extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            routeData: [],\n            route: '',\n            routeLoaded: false,\n            routeLoading: false,\n            directionData: [],\n            direction: '',\n            directionRoute: false,\n            directionLoaded: false,\n            directionLoading: false,\n            stopData: [],\n            stopLoaded: false,\n            stopLoading: false,\n            error: null\n        }\n        this.getStops = this\n            .getStops\n            .bind(this);\n        this.directionHandler = this\n            .directionHandler\n            .bind(this);\n        this.routeHandler = this\n            .routeHandler\n            .bind(this);\n    }\n\n    componentDidMount = () => {\n        this.setState({routeLoading: true})\n\n        fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json')\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({routeLoading: false, routeLoaded: true, routeData: result})\n            }, (error) => {\n                this.setState({routeLoaded: false, routeLoading: false, error});\n            })\n    }\n\n    getStops = () => {\n        this.setState({stopLoading: true})\n\n        fetch('https://svc.metrotransit.org/NexTrip/Stops/' + this.state.route + '/' + this.state.direction + '?format=json')\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({stopData: result, stopLoaded: true})\n            }, (error) => {\n                this.setState({stopLoaded: false, stopLoading: false, error});\n            })\n    }\n\n    directionHandler = (event) => {\n        this.setState({\n            direction: event.target.value\n        }, this.getStops);\n    }\n\n    routeHandler = (event) => {\n        // Update state values\n        this.setState({route: event.target.value, directionLoading: true, directionLoaded: false})\n\n        fetch('https://svc.metrotransit.org/NexTrip/Directions/' + event.target.value + '?format=json')\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({directionLoaded: true, directionLoading: false, directionData: result, direction: result[0].Value, directionRoute: true})\n                if (!window.location.href.toString().includes('#Directions')) {\n                    window\n                        .history\n                        .pushState(window.location.href, '', window.location.href + '#Directions');\n                }\n                this.getStops();\n            }, (error) => {\n                this.setState({directionLoaded: false, directionLoading: false, error});\n            })\n    }\n\n    render() {\n        return (\n                <React.Fragment>\n                    <div className='route-container'>\n                        <ChooseRoute\n                            state={this.state}\n                            routeLoaded={this.state.routeLoaded}\n                            routeData={this.state.routeData}\n                            routeHandler={this.routeHandler}/>\n\n                        <div className=\"directions-container\" data-testid=\"Direction-Container\">\n                            <ChooseDirection\n                                directionLoaded={this.state.directionLoaded}\n                                directionData0={this.state.directionData[0]}\n                                directionData1={this.state.directionData[1]}\n                                directionHandler={this.directionHandler}/>\n                        </div>\n                    </div>\n                    <div className=\"stops-container\" data-testid=\"Stops-Container\">\n                        <h2>Stops</h2>\n                        <ShowStops stopLoaded={this.state.stopLoaded} stopData={this.state.stopData}/>\n                        <Route\n                            path=\"/stops\"\n                            render={() => <ShowStops stopLoaded={this.state.stopLoaded} stopData={this.state.stopData}/>}/>\n                    </div>\n                </React.Fragment>\n        )\n    }\n}\n\nfunction App() {\n    return (\n        <BrowserRouter>\n        <div className='content'>\n            <div className='note'>\n                <h4>This application is sourced by real-time data from\n                </h4>\n                <img src='https://www.metrotransit.org/img/MetroTransitLogo.svg'></img>\n            </div>\n            <h1>NexTrip</h1>\n                <div className='application'>\n                    <Route exact path='/NexTrip' component={Master} />\n                </div>\n        </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}