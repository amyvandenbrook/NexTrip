{"ast":null,"code":"var _jsxFileName = \"/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst Directions = ({\n  directions = []\n}) => {\n  return React.createElement(\"select\", {\n    id: \"Directions\",\n    name: \"Direction\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, directions.map(directions => React.createElement(\"option\", {\n    key: directions.Value,\n    value: directions.Value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, directions.Text)));\n};\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.setState({\n        loading: true\n      });\n      fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json').then(res => res.json()).then(result => {\n        this.setState({\n          loading: false,\n          data: result\n        });\n      }, error => {\n        this.setState({\n          loading: false,\n          error\n        });\n      });\n    };\n\n    this.state = {\n      error: null,\n      loading: false,\n      data: [],\n      directionData: [],\n      value: '',\n      route: '',\n      direction: ''\n    };\n    this.handleDirection = this.handleDirection.bind(this);\n  }\n\n  handleDirection(event) {\n    console.log('Received a change');\n    this.setState({\n      route: event.target.value\n    });\n    console.log(event.target.value); //console.log('Get data for: https://svc.metrotransit.org/NexTrip/Directions/' + )\n\n    fetch('https://svc.metrotransit.org/NexTrip/Directions/' + event.target.value + '?format=json').then(res => res.json()).then(result => {\n      this.setState({\n        loading: false,\n        directionData: result\n      });\n    }, error => {\n      this.setState({\n        loading: false,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      data\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        id: \"Route\",\n        name: \"Route\",\n        onChange: this.handleDirection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, data.map(data => React.createElement(\"option\", {\n        key: data.Route,\n        value: data.Route,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, data.Description))), React.createElement(Directions, {\n        route: this.state.route,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })) // <ul>\n      //   {data.map(data => (\n      //     <li key={data.Route}>\n      //       {data.Description}\n      //     </li>\n      //   ))}\n      // </ul>\n      ;\n    }\n  }\n\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Next Trip Application\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Developed by Amy VandenBrook\"), React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js"],"names":["React","Component","Directions","directions","map","Value","Text","Routes","constructor","props","componentDidMount","setState","loading","fetch","then","res","json","result","data","error","state","directionData","value","route","direction","handleDirection","bind","event","console","log","target","render","message","Route","Description","App"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst Directions = ({directions=[]}) => {\n  return (\n    <select id=\"Directions\" name=\"Direction\">\n          {directions.map(directions => (\n            <option key={directions.Value} value={directions.Value}>{directions.Text}</option>\n          ))}\n        </select>\n  )\n}\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      loading: false,\n      data: [],\n      directionData: [],\n      value: '',\n      route: '',\n      direction: ''\n    }\n\n    this.handleDirection = this.handleDirection.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.setState({loading: true})\n    fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            loading: false,\n            data: result\n          });\n        },\n\n        (error) => {\n          this.setState({\n            loading: false,\n            error\n          });\n        }\n      )\n  }\n\n  handleDirection(event) {\n    console.log('Received a change')\n    this.setState({route: event.target.value})\n    console.log(event.target.value)\n    //console.log('Get data for: https://svc.metrotransit.org/NexTrip/Directions/' + )\n    fetch('https://svc.metrotransit.org/NexTrip/Directions/' + event.target.value + '?format=json')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            loading: false,\n            directionData: result\n          });\n        },\n\n        (error) => {\n          this.setState({\n            loading: false,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, loading, data } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else{\n      return (\n        <div>\n          <select id=\"Route\" name=\"Route\" onChange={this.handleDirection}>\n          {data.map(data => (\n            <option key={data.Route} value={data.Route}>{data.Description}</option>\n          ))}\n        </select>\n        <Directions route={this.state.route}/>\n        </div>\n        // <ul>\n        //   {data.map(data => (\n        //     <li key={data.Route}>\n        //       {data.Description}\n        //     </li>\n        //   ))}\n        // </ul>\n      )\n    }\n  }\n}\n\nfunction App() {\n  return (\n    <div>\n      <h1>Next Trip Application</h1>\n\n      <h2>Developed by Amy VandenBrook</h2>\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}