{"ast":null,"code":"var _jsxFileName = \"/Users/amyolsen/Documents/ReactJS/next-trip/src/Direction.js\";\nimport React from 'react';\nimport { BrowserRouter, Route, Switch, HashRouter } from 'react-router-dom';\nexport const ChooseDirection = props => {\n  if (props.directionLoaded && props.directionRoute) {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"Choose a direction:\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"Direction\",\n      id: props.directionData0.Value,\n      value: props.directionData0.Value,\n      onClick: props.directionHandler,\n      defaultChecked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: props.directionData0.Value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, props.directionData0.Text.toLowerCase()), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"Direction\",\n      id: props.directionData1.Value,\n      value: props.directionData1.Value,\n      onClick: props.directionHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: props.directionData1.Value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, props.directionData1.Text.toLowerCase()));\n  } else {\n    return null;\n  }\n};","map":{"version":3,"sources":["/Users/amyolsen/Documents/ReactJS/next-trip/src/Direction.js"],"names":["React","BrowserRouter","Route","Switch","HashRouter","ChooseDirection","props","directionLoaded","directionRoute","directionData0","Value","directionHandler","Text","toLowerCase","directionData1"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,UAAtC,QAAuD,kBAAvD;AAEA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACtC,MAAIA,KAAK,CAACC,eAAN,IAAyBD,KAAK,CAACE,cAAnC,EAAmD;AAC/C,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAGI;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,EAAE,EAAEF,KAAK,CAACG,cAAN,CAAqBC,KAH7B;AAII,MAAA,KAAK,EAAEJ,KAAK,CAACG,cAAN,CAAqBC,KAJhC;AAKI,MAAA,OAAO,EAAEJ,KAAK,CAACK,gBALnB;AAMI,MAAA,cAAc,MANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAUI;AAAO,MAAA,OAAO,EAAEL,KAAK,CAACG,cAAN,CAAqBC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CJ,KAAK,CACzCG,cADoC,CAEpCG,IAFoC,CAGpCC,WAHoC,EAA7C,CAVJ,EAcI;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,EAAE,EAAEP,KAAK,CAACQ,cAAN,CAAqBJ,KAH7B;AAII,MAAA,KAAK,EAAEJ,KAAK,CAACQ,cAAN,CAAqBJ,KAJhC;AAKI,MAAA,OAAO,EAAEJ,KAAK,CAACK,gBALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,EAoBI;AAAO,MAAA,OAAO,EAAEL,KAAK,CAACQ,cAAN,CAAqBJ,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CJ,KAAK,CACzCQ,cADoC,CAEpCF,IAFoC,CAGpCC,WAHoC,EAA7C,CApBJ,CADJ;AA2BH,GA5BD,MA4BO;AACH,WAAO,IAAP;AACH;AACJ,CAhCM","sourcesContent":["import React from 'react';\nimport {BrowserRouter, Route, Switch, HashRouter} from 'react-router-dom';\n\nexport const ChooseDirection = (props) => {\n    if (props.directionLoaded && props.directionRoute) {\n        return (\n            <React.Fragment>\n                <div className=\"description\">Choose a direction:\n                </div>\n                <input\n                    type='radio'\n                    name='Direction'\n                    id={props.directionData0.Value}\n                    value={props.directionData0.Value}\n                    onClick={props.directionHandler}\n                    defaultChecked></input>\n                <label htmlFor={props.directionData0.Value}>{props\n                        .directionData0\n                        .Text\n                        .toLowerCase()}</label>\n                <input\n                    type='radio'\n                    name='Direction'\n                    id={props.directionData1.Value}\n                    value={props.directionData1.Value}\n                    onClick={props.directionHandler}></input>\n                <label htmlFor={props.directionData1.Value}>{props\n                        .directionData1\n                        .Text\n                        .toLowerCase()}</label>\n            </React.Fragment>\n        )\n    } else {\n        return null\n    }\n}"]},"metadata":{},"sourceType":"module"}