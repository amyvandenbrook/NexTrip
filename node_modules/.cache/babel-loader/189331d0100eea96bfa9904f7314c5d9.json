{"ast":null,"code":"var _jsxFileName = \"/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css'; // function Stops(route, direction) {\n//     var stops = [];\n//     var error = null;\n//     if (route == '' || direction == '') {\n//         console.log(\"Route: \" + route + ' and direction: ' + direction)\n//         fetch('http://svc.metrotransit.org/NexTrip/Stops/' + route + '/' + direction + '?format=json')\n//           .then(res => res.json())\n//           .then((result) => {\n//               console.log(\"In Stops\")\n//               console.log(result)\n//               stops = result.data;\n//           }, (error) => {\n//               error = error;\n//           })\n//           return (\n//             <div>\n//               <h2>Stops: </h2>\n//               <ul>\n//                 {stops.map(stops => (\n//                   <li key={stops.Value} >{stops.Text}    {stops.Value}</li>\n//                 ))}\n//                 </ul>\n//             </div>\n//           )\n//     } else {\n//         return null;\n//     }\n// }\n\nconst Stops = ({\n  data\n}) => {\n  return data.map(stop => {\n    return React.createElement(\"li\", {\n      key: stop.Value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, stop.Text);\n  });\n};\n\nconst getStops = () => {\n  console.log(this.state);\n  console.log(\"Direction data\");\n  console.log(this.state.direction);\n  fetch('https://svc.metrotransit.org/NexTrip/Stops/' + this.state.route + '/' + this.state.direction + '?format=json').then(res => res.json()).then(result => {\n    console.log(\"In Stops\");\n    console.log(result);\n    this.setState({\n      stopData: result\n    });\n  }, error => {\n    error = error;\n  });\n  console.log(\"Stop data: \" + this.state.stopData);\n}; // const Directions = ({data=[{Value: 1, Text: 'Northbound'},{Value: 2, Text: 'Southbound'}]}) => \n//     return (\n//         <form>\n//             <input type=\"radio\" name=\"direction\" key={1} value={data[0].Value}>{data[0].Text}</input>\n//             <input type=\"radio\" name=\"direction\" key={2} value={data[1].Value}>{data[1].Text}</input>\n//         </form>\n//     )\n//     // return data.map(direction => {\n//     //     return (\n//     //         <input id={direction.Value} name=\"direction\" key={direction.Value} value={direction.Value}>{direction.Text}</input>\n//     //         )\n//     // })\n// }\n//            <input type=\"radio\" id={direction.Value} name=\"direction\" key={direction.Value}>{direction.Text}</input>\n\n\nconst Directions = ({\n  direction1Text = \"\",\n  direction1Value = \"\",\n  direction2Text = \"\",\n  direction2Value = \"\"\n}) => {\n  if (direction1Text === \"\" && direction1Value === \"\" && direction2Text === \"\" && direction2Value === \"\") {\n    return null;\n  } else {\n    return React.createElement(\"select\", {\n      id: \"Directions\",\n      name: \"Direction\",\n      onChange: handleDirectionValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: direction1Value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, direction1Text), React.createElement(\"option\", {\n      value: direction2Value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, direction2Text));\n  }\n};\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.setState({\n        loading: true\n      });\n      fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json').then(res => res.json()).then(result => {\n        this.setState({\n          loading: false,\n          data: result\n        });\n      }, error => {\n        this.setState({\n          loading: false,\n          error\n        });\n      });\n    };\n\n    this.state = {\n      error: null,\n      loading: false,\n      data: [],\n      directionData: [],\n      value: '',\n      route: '',\n      direction: '',\n      direction1Text: '',\n      direction1Value: '',\n      direction2Text: '',\n      direction2Value: '',\n      stopData: []\n    };\n    this.handleDirection = this.handleDirection.bind(this);\n  }\n\n  handleDirectionValue(event) {\n    console.log(\"Updating Direction value to: \" + event.target.value);\n    this.setState({\n      directionData: event.target.value\n    });\n  }\n\n  getStops() {\n    console.log(this.state);\n    console.log(\"Direction data\");\n    console.log(this.state.direction);\n    fetch('https://svc.metrotransit.org/NexTrip/Stops/' + this.state.route + '/' + this.state.direction + '?format=json').then(res => res.json()).then(result => {\n      console.log(\"In Stops\");\n      console.log(result);\n      this.setState({\n        stopData: result\n      });\n    }, error => {\n      error = error;\n    });\n    console.log(\"Stop data: \" + this.state.stopData);\n  }\n\n  handleDirection(event) {\n    console.log('Received a change');\n    this.setState({\n      route: event.target.value\n    });\n    console.log(event.target.value); // console.log('Get data for: https://svc.metrotransit.org/NexTrip/Directions/'\n    // + )\n\n    fetch('https://svc.metrotransit.org/NexTrip/Directions/' + event.target.value + '?format=json').then(res => res.json()).then(result => {\n      console.log(\"Changing states with new results\");\n      console.log(result);\n      console.log();\n      this.setState({\n        loading: false,\n        directionData: result,\n        direction: result[0].Value,\n        direction1Text: result[0].Text,\n        direction1Value: result[0].Value,\n        direction2Text: result[1].Text,\n        direction2Value: result[1].Value\n      });\n      console.log(this.state.direction);\n      console.log(\"Done loading in directions\");\n      this.getStops();\n    }, error => {\n      this.setState({\n        loading: false,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      data\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        id: \"Route\",\n        name: \"Route\",\n        onChange: this.handleDirection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, data.map(data => React.createElement(\"option\", {\n        key: data.Route,\n        value: data.Route,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, data.Description))), React.createElement(Directions, {\n        direction1Text: this.state.direction1Text,\n        direction1Value: this.state.direction1Value,\n        direction2Text: this.state.direction2Text,\n        direction2Value: this.state.direction1Value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"stops-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Stops, {\n        data: this.state.stopData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }))));\n    }\n  }\n\n} //<Directions\n// direction1Text={this.state.direction1Text}\n// direction1Value={this.state.direction1Value}\n// direction2Text={this.state.direction2Text}\n// direction2Value={this.state.direction1Value}/>\n//<Stops route={this.state.route} direction={this.state.direction} />\n\n\nfunction App() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"Next Trip Application\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"Developed by Amy VandenBrook\"), React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js"],"names":["React","Component","Stops","data","map","stop","Value","Text","getStops","console","log","state","direction","fetch","route","then","res","json","result","setState","stopData","error","Directions","direction1Text","direction1Value","direction2Text","direction2Value","handleDirectionValue","Routes","constructor","props","componentDidMount","loading","directionData","value","handleDirection","bind","event","target","render","message","Route","Description","App"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n// function Stops(route, direction) {\n//     var stops = [];\n//     var error = null;\n\n\n//     if (route == '' || direction == '') {\n//         console.log(\"Route: \" + route + ' and direction: ' + direction)\n//         fetch('http://svc.metrotransit.org/NexTrip/Stops/' + route + '/' + direction + '?format=json')\n//           .then(res => res.json())\n//           .then((result) => {\n//               console.log(\"In Stops\")\n//               console.log(result)\n//               stops = result.data;\n//           }, (error) => {\n//               error = error;\n//           })\n        \n//           return (\n//             <div>\n//               <h2>Stops: </h2>\n//               <ul>\n//                 {stops.map(stops => (\n//                   <li key={stops.Value} >{stops.Text}    {stops.Value}</li>\n//                 ))}\n//                 </ul>\n//             </div>\n//           )\n\n//     } else {\n//         return null;\n//     }\n// }\n\nconst Stops = ({data}) => {\n    return data.map(stop => {\n        return (\n            <li key={stop.Value}>{stop.Text}</li>\n        )\n    })\n}\n\nconst getStops = () => {\n        console.log(this.state)\n        console.log(\"Direction data\")\n        console.log(this.state.direction)\n        fetch('https://svc.metrotransit.org/NexTrip/Stops/' + this.state.route + '/' + this.state.direction + '?format=json')\n          .then(res => res.json())\n          .then((result) => {\n              console.log(\"In Stops\")\n              console.log(result)\n              this.setState({\n                  stopData: result\n              })\n          }, (error) => {\n              error = error;\n          })\n        console.log(\"Stop data: \" + this.state.stopData)\n    }\n\n// const Directions = ({data=[{Value: 1, Text: 'Northbound'},{Value: 2, Text: 'Southbound'}]}) => \n//     return (\n//         <form>\n//             <input type=\"radio\" name=\"direction\" key={1} value={data[0].Value}>{data[0].Text}</input>\n//             <input type=\"radio\" name=\"direction\" key={2} value={data[1].Value}>{data[1].Text}</input>\n//         </form>\n//     )\n//     // return data.map(direction => {\n//     //     return (\n//     //         <input id={direction.Value} name=\"direction\" key={direction.Value} value={direction.Value}>{direction.Text}</input>\n\n//     //         )\n\n//     // })\n// }\n\n//            <input type=\"radio\" id={direction.Value} name=\"direction\" key={direction.Value}>{direction.Text}</input>\n\n\nconst Directions = ({\n    direction1Text = \"\",\n    direction1Value = \"\",\n    direction2Text = \"\",\n    direction2Value = \"\"\n}) => {\n    if (direction1Text === \"\" && direction1Value === \"\" && direction2Text === \"\" && direction2Value === \"\") {\n        return (null)\n    } else {\n        return (\n            <select id=\"Directions\" name=\"Direction\" onChange={handleDirectionValue}>\n                <option value={direction1Value}>{direction1Text}</option>\n                <option value={direction2Value}>{direction2Text}</option>\n            </select>\n        )\n    }\n}\n\n\n\n\nclass Routes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            loading: false,\n            data: [],\n            directionData: [],\n            value: '',\n            route: '',\n            direction: '',\n            direction1Text: '',\n            direction1Value: '',\n            direction2Text: '',\n            direction2Value: '',\n            stopData: []\n        }\n\n        this.handleDirection = this\n            .handleDirection\n            .bind(this);\n    }\n\n    componentDidMount = () => {\n        this.setState({loading: true})\n        fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json')\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({loading: false, data: result});\n            }, (error) => {\n                this.setState({loading: false, error});\n            })\n    }\n\n    handleDirectionValue(event) {\n      console.log(\"Updating Direction value to: \" + event.target.value);\n      this.setState({directionData: event.target.value});\n\n    }\n\n    getStops() {\n        console.log(this.state)\n        console.log(\"Direction data\")\n        console.log(this.state.direction)\n        fetch('https://svc.metrotransit.org/NexTrip/Stops/' + this.state.route + '/' + this.state.direction + '?format=json')\n          .then(res => res.json())\n          .then((result) => {\n              console.log(\"In Stops\")\n              console.log(result)\n              this.setState({\n                  stopData: result\n              })\n          }, (error) => {\n              error = error;\n          })\n        console.log(\"Stop data: \" + this.state.stopData)\n    }\n\n    handleDirection(event) {\n        console.log('Received a change')\n        this.setState({route: event.target.value})\n        console.log(event.target.value)\n        // console.log('Get data for: https://svc.metrotransit.org/NexTrip/Directions/'\n        // + )\n        fetch('https://svc.metrotransit.org/NexTrip/Directions/' + event.target.value + '?format=json')\n            .then(res => res.json())\n            .then((result) => {\n                console.log(\"Changing states with new results\")\n                console.log(result)\n                console.log()\n                this.setState({\n                    loading: false,\n                    directionData: result,\n                    direction: result[0].Value,\n                    direction1Text: result[0].Text,\n                    direction1Value: result[0].Value,\n                    direction2Text: result[1].Text,\n                    direction2Value: result[1].Value\n                });\n                console.log(this.state.direction)\n                console.log(\"Done loading in directions\")\n                this.getStops()\n            }, (error) => {\n                this.setState({loading: false, error});\n            })\n    }\n\n    render() {\n        const {error, loading, data} = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else {\n            return (\n                <div>\n                    <select id=\"Route\" name=\"Route\" onChange={this.handleDirection}>\n                        {data.map(data => (\n                            <option key={data.Route} value={data.Route}>{data.Description}</option>\n                        ))}\n                    </select>\n                    <Directions\n                        direction1Text={this.state.direction1Text}\n                        direction1Value={this.state.direction1Value}\n                        direction2Text={this.state.direction2Text}\n                        direction2Value={this.state.direction1Value}/>\n                    <div className=\"stops-container\">\n                        <ul>\n                            <Stops data={this.state.stopData} />\n                        </ul>\n                    </div>\n                    \n                </div>\n            )\n        }\n    }\n}\n//<Directions\n// direction1Text={this.state.direction1Text}\n// direction1Value={this.state.direction1Value}\n// direction2Text={this.state.direction2Text}\n// direction2Value={this.state.direction1Value}/>\n//<Stops route={this.state.route} direction={this.state.direction} />\nfunction App() {\n    return (\n        <div>\n            <h1>Next Trip Application</h1>\n\n            <h2>Developed by Amy VandenBrook</h2>\n            <Routes/>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}