{"ast":null,"code":"import React from'react';export var ChooseRoute=function ChooseRoute(props){if(props.routeLoaded){return React.createElement(React.Fragment,null,React.createElement(\"p\",null,\"Please select a route from the options below to see the directions and stops available for you!\"),React.createElement(\"select\",{id:\"Route\",\"data-testid\":\"Select-Route\",name:\"Route\",onChange:props.routeHandler},!props.routeChanged?React.createElement(\"option\",{value:-1},\"Select a Route\"):null,\";\",props.routeData.map(function(data){return React.createElement(\"option\",{key:data.Route,value:data.Route},data.Description);})),React.createElement(\"i\",{className:\"fas fa-arrow-circle-down\"}));}else{return React.createElement(\"div\",null,\"Loading\");}};","map":{"version":3,"sources":["/Users/amyolsen/Documents/ReactJS/next-trip/src/Route.js"],"names":["React","ChooseRoute","props","routeLoaded","routeHandler","routeChanged","routeData","map","data","Route","Description"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAEC,KAAF,CAAa,CACpC,GAAIA,KAAK,CAACC,WAAV,CAAuB,CACnB,MACI,qBAAC,KAAD,CAAO,QAAP,MACI,+HADJ,CAEI,8BAAQ,EAAE,CAAC,OAAX,CAAmB,cAAY,cAA/B,CAA8C,IAAI,CAAC,OAAnD,CAA2D,QAAQ,CAAED,KAAK,CAACE,YAA3E,EACK,CAACF,KAAK,CAACG,YAAP,CAAsB,8BAAQ,KAAK,CAAE,CAAC,CAAhB,mBAAtB,CAAmE,IADxE,KAEKH,KAAK,CAACI,SAAN,CAAgBC,GAAhB,CAAoB,SAAAC,IAAI,QACrB,+BAAQ,GAAG,CAAEA,IAAI,CAACC,KAAlB,CAAyB,KAAK,CAAED,IAAI,CAACC,KAArC,EAA6CD,IAAI,CAACE,WAAlD,CADqB,EAAxB,CAFL,CAFJ,CAQI,yBAAG,SAAS,CAAC,0BAAb,EARJ,CADJ,CAYH,CAbD,IAcK,CACD,MAAO,0CAAP,CACH,CACJ,CAlBM","sourcesContent":["import React from 'react'\n\nexport const ChooseRoute = ( props ) => {\n    if (props.routeLoaded) {\n        return (\n            <React.Fragment>\n                <p>Please select a route from the options below to see the directions and stops available for you!</p>\n                <select id=\"Route\" data-testid=\"Select-Route\" name=\"Route\" onChange={props.routeHandler}>\n                    {!props.routeChanged ? <option value={-1}>Select a Route</option> : null};\n                    {props.routeData.map(data => (\n                        <option key={data.Route} value={data.Route}>{data.Description}</option>\n                    ))}\n                </select>\n                <i className=\"fas fa-arrow-circle-down\"></i>\n            </React.Fragment>\n        )\n    }\n    else {\n        return <div>Loading</div>\n    }\n}"]},"metadata":{},"sourceType":"module"}