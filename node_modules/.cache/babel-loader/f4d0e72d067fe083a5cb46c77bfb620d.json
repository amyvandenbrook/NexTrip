{"ast":null,"code":"var _jsxFileName = \"/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css'; // function Stops(route, direction) {\n//     var stops = [];\n//     var error = null;\n//     if (route == '' || direction == '') {\n//         console.log(\"Route: \" + route + ' and direction: ' + direction)\n//         fetch('http://svc.metrotransit.org/NexTrip/Stops/' + route + '/' + direction + '?format=json')\n//           .then(res => res.json())\n//           .then((result) => {\n//               console.log(\"In Stops\")\n//               console.log(result)\n//               stops = result.data;\n//           }, (error) => {\n//               error = error;\n//           })\n//           return (\n//             <div>\n//               <h2>Stops: </h2>\n//               <ul>\n//                 {stops.map(stops => (\n//                   <li key={stops.Value} >{stops.Text}    {stops.Value}</li>\n//                 ))}\n//                 </ul>\n//             </div>\n//           )\n//     } else {\n//         return null;\n//     }\n// }\n\nconst Stops = ({\n  data\n}) => {\n  return data.map(stop => {\n    return React.createElement(\"li\", {\n      key: stop.Value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, stop.Text);\n  });\n};\n\nconst Directions = ({\n  data\n}) => {\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"direction\",\n    key: 1,\n    value: data[0].Value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, data[0].Text), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"direction\",\n    key: 2,\n    value: data[1].Value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, data[1].Text)); // return data.map(direction => {\n  //     return (\n  //         <input id={direction.Value} name=\"direction\" key={direction.Value} value={direction.Value}>{direction.Text}</input>\n  //         )\n  // })\n}; //            <input type=\"radio\" id={direction.Value} name=\"direction\" key={direction.Value}>{direction.Text}</input>\n// const Directions = ({\n//     direction1Text = \"\",\n//     direction1Value = \"\",\n//     direction2Text = \"\",\n//     direction2Value = \"\"\n// }) => {\n//     if (direction1Text === \"\" && direction1Value === \"\" && direction2Text === \"\" && direction2Value === \"\") {\n//         return (null)\n//     } else {\n//         return (\n//             <select id=\"Directions\" name=\"Direction\" onChange=\"handleDirectionValue\">\n//                 <option value={direction1Value}>{direction1Text}</option>\n//                 <option value={direction2Value}>{direction2Text}</option>\n//             </select>\n//         )\n//     }\n// }\n\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.setState({\n        loading: true\n      });\n      fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json').then(res => res.json()).then(result => {\n        this.setState({\n          loading: false,\n          data: result\n        });\n      }, error => {\n        this.setState({\n          loading: false,\n          error\n        });\n      });\n    };\n\n    this.state = {\n      error: null,\n      loading: false,\n      data: [],\n      directionData: [],\n      value: '',\n      route: '',\n      direction: '',\n      direction1Text: '',\n      direction1Value: '',\n      direction2Text: '',\n      direction2Value: '',\n      stopData: []\n    };\n    this.handleDirection = this.handleDirection.bind(this);\n  }\n\n  handleDirectionValue(event) {\n    console.log(\"Updating Direction value to: \" + event.target.value);\n    this.setState({\n      directionData: event.target.value\n    });\n  }\n\n  getStops() {\n    console.log(this.state);\n    console.log(\"Direction data\");\n    console.log(this.state.direction);\n    fetch('https://svc.metrotransit.org/NexTrip/Stops/' + this.state.route + '/' + this.state.direction + '?format=json').then(res => res.json()).then(result => {\n      console.log(\"In Stops\");\n      console.log(result);\n      this.setState({\n        stopData: result\n      });\n    }, error => {\n      error = error;\n    });\n    console.log(\"Stop data: \" + this.state.stopData);\n  }\n\n  handleDirection(event) {\n    console.log('Received a change');\n    this.setState({\n      route: event.target.value\n    });\n    console.log(event.target.value); // console.log('Get data for: https://svc.metrotransit.org/NexTrip/Directions/'\n    // + )\n\n    fetch('https://svc.metrotransit.org/NexTrip/Directions/' + event.target.value + '?format=json').then(res => res.json()).then(result => {\n      console.log(\"Changing states with new results\");\n      console.log(result);\n      console.log();\n      this.setState({\n        loading: false,\n        directionData: result,\n        direction: result[0].Value,\n        direction1Text: result[0].Text,\n        direction1Value: result[0].Value,\n        direction2Text: result[1].Text,\n        direction2Value: result[1].Value\n      });\n      console.log(this.state.direction);\n      console.log(\"Done loading in directions\");\n      this.getStops();\n    }, error => {\n      this.setState({\n        loading: false,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      data\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        id: \"Route\",\n        name: \"Route\",\n        onChange: this.handleDirection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, data.map(data => React.createElement(\"option\", {\n        key: data.Route,\n        value: data.Route,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, data.Description))), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Directions, {\n        data: this.state.directionData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"stops-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Stops, {\n        data: this.state.stopData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }))));\n    }\n  }\n\n} //<Directions\n// direction1Text={this.state.direction1Text}\n// direction1Value={this.state.direction1Value}\n// direction2Text={this.state.direction2Text}\n// direction2Value={this.state.direction1Value}/>\n//<Stops route={this.state.route} direction={this.state.direction} />\n\n\nfunction App() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"Next Trip Application\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Developed by Amy VandenBrook\"), React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amyolsen/Documents/ReactJS/next-trip/src/App.js"],"names":["React","Component","Stops","data","map","stop","Value","Text","Directions","Routes","constructor","props","componentDidMount","setState","loading","fetch","then","res","json","result","error","state","directionData","value","route","direction","direction1Text","direction1Value","direction2Text","direction2Value","stopData","handleDirection","bind","handleDirectionValue","event","console","log","target","getStops","render","message","Route","Description","App"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n// function Stops(route, direction) {\n//     var stops = [];\n//     var error = null;\n\n\n//     if (route == '' || direction == '') {\n//         console.log(\"Route: \" + route + ' and direction: ' + direction)\n//         fetch('http://svc.metrotransit.org/NexTrip/Stops/' + route + '/' + direction + '?format=json')\n//           .then(res => res.json())\n//           .then((result) => {\n//               console.log(\"In Stops\")\n//               console.log(result)\n//               stops = result.data;\n//           }, (error) => {\n//               error = error;\n//           })\n        \n//           return (\n//             <div>\n//               <h2>Stops: </h2>\n//               <ul>\n//                 {stops.map(stops => (\n//                   <li key={stops.Value} >{stops.Text}    {stops.Value}</li>\n//                 ))}\n//                 </ul>\n//             </div>\n//           )\n\n//     } else {\n//         return null;\n//     }\n// }\n\nconst Stops = ({data}) => {\n    return data.map(stop => {\n        return (\n            <li key={stop.Value}>{stop.Text}</li>\n        )\n    })\n}\n\nconst Directions = ({data}) => {\n    return (\n        <form>\n            <input type=\"radio\" name=\"direction\" key={1} value={data[0].Value}>{data[0].Text}</input>\n            <input type=\"radio\" name=\"direction\" key={2} value={data[1].Value}>{data[1].Text}</input>\n        </form>\n    )\n    // return data.map(direction => {\n    //     return (\n    //         <input id={direction.Value} name=\"direction\" key={direction.Value} value={direction.Value}>{direction.Text}</input>\n\n    //         )\n\n    // })\n}\n\n//            <input type=\"radio\" id={direction.Value} name=\"direction\" key={direction.Value}>{direction.Text}</input>\n\n\n// const Directions = ({\n//     direction1Text = \"\",\n//     direction1Value = \"\",\n//     direction2Text = \"\",\n//     direction2Value = \"\"\n// }) => {\n//     if (direction1Text === \"\" && direction1Value === \"\" && direction2Text === \"\" && direction2Value === \"\") {\n//         return (null)\n//     } else {\n//         return (\n//             <select id=\"Directions\" name=\"Direction\" onChange=\"handleDirectionValue\">\n//                 <option value={direction1Value}>{direction1Text}</option>\n//                 <option value={direction2Value}>{direction2Text}</option>\n//             </select>\n//         )\n//     }\n// }\n\n\nclass Routes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            loading: false,\n            data: [],\n            directionData: [],\n            value: '',\n            route: '',\n            direction: '',\n            direction1Text: '',\n            direction1Value: '',\n            direction2Text: '',\n            direction2Value: '',\n            stopData: []\n        }\n\n        this.handleDirection = this\n            .handleDirection\n            .bind(this);\n    }\n\n    componentDidMount = () => {\n        this.setState({loading: true})\n        fetch('https://svc.metrotransit.org/NexTrip/Routes?format=json')\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({loading: false, data: result});\n            }, (error) => {\n                this.setState({loading: false, error});\n            })\n    }\n\n    handleDirectionValue(event) {\n      console.log(\"Updating Direction value to: \" + event.target.value);\n      this.setState({directionData: event.target.value});\n    }\n\n    getStops() {\n        console.log(this.state)\n        console.log(\"Direction data\")\n        console.log(this.state.direction)\n        fetch('https://svc.metrotransit.org/NexTrip/Stops/' + this.state.route + '/' + this.state.direction + '?format=json')\n          .then(res => res.json())\n          .then((result) => {\n              console.log(\"In Stops\")\n              console.log(result)\n              this.setState({\n                  stopData: result\n              })\n          }, (error) => {\n              error = error;\n          })\n        console.log(\"Stop data: \" + this.state.stopData)\n    }\n\n    handleDirection(event) {\n        console.log('Received a change')\n        this.setState({route: event.target.value})\n        console.log(event.target.value)\n        // console.log('Get data for: https://svc.metrotransit.org/NexTrip/Directions/'\n        // + )\n        fetch('https://svc.metrotransit.org/NexTrip/Directions/' + event.target.value + '?format=json')\n            .then(res => res.json())\n            .then((result) => {\n                console.log(\"Changing states with new results\")\n                console.log(result)\n                console.log()\n                this.setState({\n                    loading: false,\n                    directionData: result,\n                    direction: result[0].Value,\n                    direction1Text: result[0].Text,\n                    direction1Value: result[0].Value,\n                    direction2Text: result[1].Text,\n                    direction2Value: result[1].Value\n                });\n                console.log(this.state.direction)\n                console.log(\"Done loading in directions\")\n                this.getStops()\n            }, (error) => {\n                this.setState({loading: false, error});\n            })\n    }\n\n    render() {\n        const {error, loading, data} = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else {\n            return (\n                <div>\n                    <select id=\"Route\" name=\"Route\" onChange={this.handleDirection}>\n                        {data.map(data => (\n                            <option key={data.Route} value={data.Route}>{data.Description}</option>\n                        ))}\n                    </select>\n                    <form>\n                        <Directions data={this.state.directionData} />\n                    </form>\n                    <div className=\"stops-container\">\n                        <ul>\n                            <Stops data={this.state.stopData} />\n                        </ul>\n                    </div>\n                    \n                </div>\n            )\n        }\n    }\n}\n//<Directions\n// direction1Text={this.state.direction1Text}\n// direction1Value={this.state.direction1Value}\n// direction2Text={this.state.direction2Text}\n// direction2Value={this.state.direction1Value}/>\n//<Stops route={this.state.route} direction={this.state.direction} />\nfunction App() {\n    return (\n        <div>\n            <h1>Next Trip Application</h1>\n\n            <h2>Developed by Amy VandenBrook</h2>\n            <Routes/>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}